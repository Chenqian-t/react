{"version":3,"sources":["utils/Auth.js","actions/actionTypes.js","utils/config.js","utils/request.js","api/login.js","actions/user.js","router.config.js","views/Home/index.js","views/Login/index.js","views/NotFound/index.js","App.js","reducers/user.js","reducers/index.js","store.js","index.js"],"names":["Auth","props","location","config","pathname","isLogin","Boolean","localStorage","getItem","target","find","v","path","auth","component","redirect","to","exact","userType","request","axios","create","baseURL","base_url","timeout","interceptors","use","headers","token","sessionStorage","err","Promise","reject","response","data","LoginApi","params","url","method","getUserInfo","username","password","dispatch","a","fetchUser","login","re","errcode","fetchUserSucc","fetchUserFail","type","isLoading","routerConfig","userInfo","useSelector","state","user","JSON","stringify","useDispatch","onFinish","values","className","title","hoverable","style","height","name","labelCol","span","wrapperCol","onFinishFailed","errorInfo","console","log","autoComplete","Item","label","rules","required","message","Password","offset","htmlType","loading","App","initState","parse","action","setItem","removeItem","combineReducers","createStore","rootReducers","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.648bbd4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst Auth = (props) => {\r\n    const { location, config } = props;\r\n    const { pathname } = location;\r\n    const isLogin = Boolean(localStorage.getItem('__token__'));\r\n\r\n    // 如果该路由不用进行权限校验，登录状态下登陆页除外\r\n    // 因为登陆后，无法跳转到登陆页\r\n    // 这部分代码，是为了在非登陆状态下，访问不需要权限校验的路由\r\n    const target = config.find((v) => v.path === pathname);\r\n    if (target && !target.auth && !isLogin) {\r\n        const { component, redirect } = target;\r\n        if (redirect) return <Redirect to={redirect} />;\r\n        return <Route exact path={pathname} component={component} />;\r\n    }\r\n\r\n    if (isLogin) {\r\n        // 如果是登陆状态，想要跳转到登陆，重定向到主页\r\n        if (pathname === '/login') {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            // 如果路由合法，就跳转到相应的路由\r\n            if (target) {\r\n                const { component, redirect } = target;\r\n                if (redirect) return <Redirect to={redirect} />;\r\n                return <Route exact path={pathname} component={component} />;\r\n            } else {\r\n                // 如果路由不合法，重定向到 notfound 页面\r\n                return <Redirect to='/notfound' />\r\n            }\r\n        }\r\n    } else {\r\n        // 非登陆状态下，当路由合法时且需要权限校验时，跳转到登陆页面，要求登陆\r\n        if (target && target.auth) {\r\n            return <Redirect to='/login' />\r\n        } else {\r\n            // 非登陆状态下，路由不合法时，重定向至 notfound\r\n            return <Redirect to='/notfound' />\r\n        }\r\n    }\r\n}\r\n\r\nexport default Auth","const chatListType = {\r\n    GET_CHAT_LIST: 'GET_CHAT_LIST'\r\n}\r\n\r\nconst userType = {\r\n    GET_USER_INFO: 'GET_USER_INFO',\r\n    FETCH_USER: 'FETCH_USER',\r\n    FETCH_USER_SUCC: 'FETCH_USER_SUCC',\r\n    FETCH_USER_FAIL: 'FETCH_USER_FAIL',\r\n    LOGOUT: 'LOGOUT',\r\n}\r\n\r\nconst friendsListType = {\r\n    GET_FRIENDS_LIST: 'GET_FRIENDS_LIST',\r\n}\r\n\r\nexport { chatListType, userType, friendsListType }","let config = {};\r\nconfig.base_url = 'https://www.fastmock.site/mock/6dd0114b612f099fe6bac00dca45863c/react/api/';\r\n\r\nexport default config","import axios from 'axios';\r\nimport config from './config';\r\n\r\nlet request = axios.create({\r\n    baseURL: config.base_url,\r\n    timeout: 20000\r\n});\r\n\r\nrequest.interceptors.request.use(\r\n    config => {\r\n        config.headers.token = sessionStorage.getItem('token');\r\n        return config;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        return res;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nexport default request","import { request } from '../utils';\r\n\r\nclass LoginApi {\r\n    static async login(params) {\r\n        return request({\r\n            url: '/login',\r\n            method: 'POST',\r\n            data: params\r\n        });\r\n    }\r\n}\r\n\r\nexport default LoginApi","import { userType } from './actionTypes';\r\nimport { LoginApi } from '../api';\r\n\r\nconst getUserInfo = ({username, password}) => async dispatch => {\r\n    dispatch(fetchUser());\r\n    let re = await LoginApi.login({ username, password });\r\n    if (re.errcode === 0) {\r\n        dispatch(fetchUserSucc(re.data));\r\n    } else {\r\n        dispatch(fetchUserFail());\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: userType.LOGOUT,\r\n})\r\n\r\nconst fetchUser = () => ({\r\n    type: userType.FETCH_USER,\r\n    isLoading: true,\r\n});\r\n\r\nconst fetchUserSucc = (data) => ({\r\n    type: userType.FETCH_USER_SUCC,\r\n    isLoading: false,\r\n    data,\r\n});\r\n\r\nconst fetchUserFail = () => ({\r\n    type: userType.FETCH_USER_FAIL,\r\n    isLoading: false,\r\n});\r\n\r\nexport { logout, getUserInfo, fetchUser, fetchUserSucc, fetchUserFail }","import Login from './views/Login';\r\nimport Home from './views/Home';\r\nimport NotFound from './views/NotFound';\r\n\r\nexport const routerConfig = [\r\n    {\r\n        path: '/',\r\n        redirect: '/home',\r\n        auth: true,\r\n    }, {\r\n        path: '/home',\r\n        component: Home,\r\n        auth: true,\r\n    }, {\r\n        path: '/login',\r\n        component: Login,\r\n    }, {\r\n        path: '/notfound',\r\n        component: NotFound\r\n    }\r\n];","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Home = () => {\r\n    const userInfo = useSelector(state => ({...state.user}));\r\n\r\n    return (\r\n        <div>\r\n            {JSON.stringify(userInfo)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './Login.css';\r\nimport { Card, Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/user';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const userInfo = useSelector(state => ({ ...state.user }));\r\n    const dispatch = useDispatch();\r\n\r\n    const onFinish = async (values) => {\r\n        dispatch(getUserInfo(values));\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        userInfo.isLogin ? <Redirect to='/home' /> :\r\n        <div className=\"login\">\r\n            <div className=\"login_box center_box\">\r\n                <Card title=\"登录\" hoverable style={{ height: '100%' }}>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{\r\n                            span: 6,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 16,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item\r\n                            label=\"账号\"\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your username!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"密码\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            wrapperCol={{\r\n                                offset: 8,\r\n                                span: 16,\r\n                            }}\r\n                        >\r\n                            <Button type=\"primary\" htmlType=\"submit\" loading={userInfo.isLoading}>\r\n                                登录\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        NotFound\r\n    </div>\r\n)\r\n\r\nexport default NotFound","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport './App.less';\r\nimport './reset.css';\r\nimport Auth from './utils/Auth';\r\nimport { routerConfig } from './router.config';\r\n\r\nconst App = () => (\r\n\t<Switch>\r\n\t\t<Auth config={routerConfig} />\r\n\t</Switch>\r\n)\r\n\r\nexport default App","import { userType } from '../actions/actionTypes';\r\n\r\nconst initState = {\r\n    userInfo: JSON.parse(localStorage.getItem('__userinfo__') || '{}'),\r\n    isLogin: Boolean(localStorage.getItem('__token__')),\r\n    isLoading: false,\r\n}\r\n\r\nconst user = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case userType.FETCH_USER:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case userType.FETCH_USER_SUCC:\r\n            console.log(action);\r\n            localStorage.setItem('__token__', true);\r\n            localStorage.setItem('__userinfo__', JSON.stringify(action.data.userInfo));\r\n            return {\r\n                userInfo: action.data.userInfo,\r\n                isLoading: false,\r\n                isLogin: true\r\n            };\r\n        case userType.FETCH_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            };\r\n        case userType.LOGOUT:\r\n            localStorage.removeItem('__token__');\r\n            return {\r\n                ...state,\r\n                userInfo: {},\r\n                isLogin: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\n\r\nexport default combineReducers({\r\n    user\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(rootReducers, applyMiddleware(thunk))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<App />\r\n\t\t</Router>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}